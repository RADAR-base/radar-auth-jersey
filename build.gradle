plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'com.jfrog.bintray' version '1.8.4' apply false
}

description = 'Library for Jersey authorization, exception handling and configuration with the RADAR platform'
group = 'org.radarbase'
version = '0.1.1-SNAPSHOT'

ext {
    githubRepoName = 'RADAR-base/radar-jersey'
    githubUrl = "https://github.com/${githubRepoName}.git".toString()
    issueUrl = "https://github.com/$githubRepoName/issues".toString()
    website = 'http://radar-base.org'

    hk2Version = "2.6.1"
    managementPortalVersion = "0.5.7"
    jakartaWsRsVersion = "2.1.6"
    jakartaAnnotationVersion = "1.3.5"
    jerseyVersion = "2.29.1"
    grizzlyVersion = "2.4.4"
    jacksonVersion = "2.9.10"
    okhttpVersion = "4.2.0"
}

repositories {
    jcenter()
    maven { url = "https://dl.bintray.com/radar-cns/org.radarcns" }
    maven { url = "https://repo.thehyve.nl/content/repositories/snapshots" }
}

dependencies {
    api("org.radarcns:radar-auth:$managementPortalVersion")

    api("jakarta.ws.rs:jakarta.ws.rs-api:$jakartaWsRsVersion")
    api("jakarta.annotation:jakarta.annotation-api:$jakartaAnnotationVersion")
    api("org.glassfish.hk2.external:jakarta.inject:$hk2Version")
    api("org.glassfish.jersey.core:jersey-server:$jerseyVersion")

    api("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")

    // exception template rendering
    implementation 'com.github.spullara.mustache.java:compiler:0.9.6'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.slf4j:slf4j-api:1.7.26"

    testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation("com.squareup.okhttp3:okhttp:$okhttpVersion")

    testImplementation("org.glassfish.grizzly:grizzly-http-server:${grizzlyVersion}")

    testImplementation("org.glassfish.jersey.containers:jersey-container-grizzly2-http:${jerseyVersion}")
    testImplementation("org.glassfish.jersey.containers:jersey-container-grizzly2-servlet:${jerseyVersion}")
    testImplementation("org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}")
    testRuntimeOnly("org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}")

    testRuntimeOnly 'javax.xml.bind:jaxb-api:2.2.11'
    testRuntimeOnly 'com.sun.xml.bind:jaxb-core:2.2.11'
    testRuntimeOnly 'com.sun.xml.bind:jaxb-impl:2.2.11'
    testRuntimeOnly 'javax.activation:activation:1.1.1'

    testRuntime 'org.slf4j:slf4j-simple:1.7.26'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.jvmTarget = "11"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

wrapper {
    gradleVersion = "5.6.2"
}

apply from: "gradle/publishing.gradle"