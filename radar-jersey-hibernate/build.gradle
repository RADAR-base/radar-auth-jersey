plugins {
    id 'org.jetbrains.kotlin.jvm'
}

description = 'Library for Jersey with Hibernate with the RADAR platform'

repositories {
    jcenter()
    maven { url = "https://dl.bintray.com/radar-cns/org.radarcns" }
}

ext.extra = [
        "hibernateVersion": "5.4.22.Final",
        "liquibaseVersion": "3.10.3",
        "postgresVersion": "42.2.17",
        "h2Version": "1.4.200",
]

dependencies {
    api(project(":"))
    api("org.hibernate:hibernate-core:${project.extra["hibernateVersion"]}")
    runtimeOnly("org.hibernate:hibernate-c3p0:${project.extra["hibernateVersion"]}")
    implementation("org.liquibase:liquibase-core:${project.extra["liquibaseVersion"]}")

    runtimeOnly("org.postgresql:postgresql:${project.extra["postgresVersion"]}")

    testRuntimeOnly("org.glassfish.grizzly:grizzly-http-server:$grizzlyVersion")
    testRuntimeOnly("org.glassfish.jersey.containers:jersey-container-grizzly2-servlet:$jerseyVersion")
    testImplementation("com.h2database:h2:${project.extra["h2Version"]}")

    testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation("com.squareup.okhttp3:okhttp:$okhttpVersion")

    testRuntimeOnly("ch.qos.logback:logback-classic:1.2.3")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "11"
        apiVersion = "1.4"
        languageVersion = "1.4"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }
}

apply from: "$rootDir/gradle/publishing.gradle"
